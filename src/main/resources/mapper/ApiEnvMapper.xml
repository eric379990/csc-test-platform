<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csc.test.platform.dao.ApiEnvMapper">
  <resultMap id="BaseResultMap" type="com.csc.test.platform.model.ApiEnv">
    <id column="envID" jdbcType="INTEGER" property="envid" />
    <id column="projectID" jdbcType="INTEGER" property="projectid" />
    <result column="envName" jdbcType="VARCHAR" property="envname" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="port" jdbcType="CHAR" property="port" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    envID, projectID, envName, url, port
  </sql>
  <select id="selectByExample" parameterType="com.csc.test.platform.model.ApiEnvExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from eo_api_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.csc.test.platform.model.ApiEnvKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eo_api_env
    where envID = #{envid,jdbcType=INTEGER}
      and projectID = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.csc.test.platform.model.ApiEnvKey">
    delete from eo_api_env
    where envID = #{envid,jdbcType=INTEGER}
      and projectID = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.csc.test.platform.model.ApiEnvExample">
    delete from eo_api_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.csc.test.platform.model.ApiEnv">
    insert into eo_api_env (envID, projectID, envName, 
      url, port)
    values (#{envid,jdbcType=INTEGER}, #{projectid,jdbcType=INTEGER}, #{envname,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{port,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.csc.test.platform.model.ApiEnv">
    insert into eo_api_env
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="envid != null">
        envID,
      </if>
      <if test="projectid != null">
        projectID,
      </if>
      <if test="envname != null">
        envName,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="port != null">
        port,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="envid != null">
        #{envid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="envname != null">
        #{envname,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csc.test.platform.model.ApiEnvExample" resultType="java.lang.Long">
    select count(*) from eo_api_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eo_api_env
    <set>
      <if test="record.envid != null">
        envID = #{record.envid,jdbcType=INTEGER},
      </if>
      <if test="record.projectid != null">
        projectID = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.envname != null">
        envName = #{record.envname,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null">
        port = #{record.port,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eo_api_env
    set envID = #{record.envid,jdbcType=INTEGER},
      projectID = #{record.projectid,jdbcType=INTEGER},
      envName = #{record.envname,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csc.test.platform.model.ApiEnv">
    update eo_api_env
    <set>
      <if test="envname != null">
        envName = #{envname,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=CHAR},
      </if>
    </set>
    where envID = #{envid,jdbcType=INTEGER}
      and projectID = #{projectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csc.test.platform.model.ApiEnv">
    update eo_api_env
    set envName = #{envname,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      port = #{port,jdbcType=CHAR}
    where envID = #{envid,jdbcType=INTEGER}
      and projectID = #{projectid,jdbcType=INTEGER}
  </update>
</mapper>