<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csc.test.platform.dao.ApiGroupMapper">
  <resultMap id="BaseResultMap" type="com.csc.test.platform.model.ApiGroup">
    <id column="groupID" jdbcType="INTEGER" property="groupid" />
    <id column="projectID" jdbcType="INTEGER" property="projectid" />
    <result column="groupName" jdbcType="VARCHAR" property="groupname" />
    <result column="parentGroupID" jdbcType="INTEGER" property="parentgroupid" />
    <result column="isChild" jdbcType="TINYINT" property="ischild" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    groupID, projectID, groupName, parentGroupID, isChild
  </sql>
  <select id="selectByExample" parameterType="com.csc.test.platform.model.ApiGroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from eo_api_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.csc.test.platform.model.ApiGroupKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eo_api_group
    where groupID = #{groupid,jdbcType=INTEGER}
      and projectID = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.csc.test.platform.model.ApiGroupKey">
    delete from eo_api_group
    where groupID = #{groupid,jdbcType=INTEGER}
      and projectID = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.csc.test.platform.model.ApiGroupExample">
    delete from eo_api_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.csc.test.platform.model.ApiGroup">
    insert into eo_api_group (groupID, projectID, groupName, 
      parentGroupID, isChild)
    values (#{groupid,jdbcType=INTEGER}, #{projectid,jdbcType=INTEGER}, #{groupname,jdbcType=VARCHAR}, 
      #{parentgroupid,jdbcType=INTEGER}, #{ischild,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.csc.test.platform.model.ApiGroup">
    insert into eo_api_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupid != null">
        groupID,
      </if>
      <if test="projectid != null">
        projectID,
      </if>
      <if test="groupname != null">
        groupName,
      </if>
      <if test="parentgroupid != null">
        parentGroupID,
      </if>
      <if test="ischild != null">
        isChild,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="groupname != null">
        #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="parentgroupid != null">
        #{parentgroupid,jdbcType=INTEGER},
      </if>
      <if test="ischild != null">
        #{ischild,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csc.test.platform.model.ApiGroupExample" resultType="java.lang.Long">
    select count(*) from eo_api_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eo_api_group
    <set>
      <if test="record.groupid != null">
        groupID = #{record.groupid,jdbcType=INTEGER},
      </if>
      <if test="record.projectid != null">
        projectID = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.groupname != null">
        groupName = #{record.groupname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentgroupid != null">
        parentGroupID = #{record.parentgroupid,jdbcType=INTEGER},
      </if>
      <if test="record.ischild != null">
        isChild = #{record.ischild,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eo_api_group
    set groupID = #{record.groupid,jdbcType=INTEGER},
      projectID = #{record.projectid,jdbcType=INTEGER},
      groupName = #{record.groupname,jdbcType=VARCHAR},
      parentGroupID = #{record.parentgroupid,jdbcType=INTEGER},
      isChild = #{record.ischild,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csc.test.platform.model.ApiGroup">
    update eo_api_group
    <set>
      <if test="groupname != null">
        groupName = #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="parentgroupid != null">
        parentGroupID = #{parentgroupid,jdbcType=INTEGER},
      </if>
      <if test="ischild != null">
        isChild = #{ischild,jdbcType=TINYINT},
      </if>
    </set>
    where groupID = #{groupid,jdbcType=INTEGER}
      and projectID = #{projectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csc.test.platform.model.ApiGroup">
    update eo_api_group
    set groupName = #{groupname,jdbcType=VARCHAR},
      parentGroupID = #{parentgroupid,jdbcType=INTEGER},
      isChild = #{ischild,jdbcType=TINYINT}
    where groupID = #{groupid,jdbcType=INTEGER}
      and projectID = #{projectid,jdbcType=INTEGER}
  </update>
</mapper>