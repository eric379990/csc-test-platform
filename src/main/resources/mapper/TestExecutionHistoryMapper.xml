<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csc.test.platform.dao.TestExecutionHistoryMapper">
  <resultMap id="BaseResultMap" type="com.csc.test.platform.model.TestExecutionHistory">
    <id column="executionID" jdbcType="INTEGER" property="executionid" />
    <result column="testTime" jdbcType="TIMESTAMP" property="testtime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
    <result column="projectID" jdbcType="INTEGER" property="projectid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.csc.test.platform.model.TestExecutionHistory">
    <result column="comments" jdbcType="LONGVARCHAR" property="comments" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    executionID, testTime, status, userID, projectID
  </sql>
  <sql id="Blob_Column_List">
    comments
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.csc.test.platform.model.TestExecutionHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from eo_project_test_execution_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.csc.test.platform.model.TestExecutionHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from eo_project_test_execution_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from eo_project_test_execution_history
    where executionID = #{executionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eo_project_test_execution_history
    where executionID = #{executionid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.csc.test.platform.model.TestExecutionHistoryExample">
    delete from eo_project_test_execution_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="executionid" useGeneratedKeys="true" parameterType="com.csc.test.platform.model.TestExecutionHistory">
    insert into eo_project_test_execution_history (executionID, testTime, status, 
      userID, projectID, comments
      )
    values (#{executionid,jdbcType=INTEGER}, #{testtime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{userid,jdbcType=INTEGER}, #{projectid,jdbcType=INTEGER}, #{comments,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.csc.test.platform.model.TestExecutionHistory">
    insert into eo_project_test_execution_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="executionid != null">
        executionID,
      </if>
      <if test="testtime != null">
        testTime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="projectid != null">
        projectID,
      </if>
      <if test="comments != null">
        comments,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="executionid != null">
        #{executionid,jdbcType=INTEGER},
      </if>
      <if test="testtime != null">
        #{testtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.csc.test.platform.model.TestExecutionHistoryExample" resultType="java.lang.Long">
    select count(*) from eo_project_test_execution_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eo_project_test_execution_history
    <set>
      <if test="record.executionid != null">
        executionID = #{record.executionid,jdbcType=INTEGER},
      </if>
      <if test="record.testtime != null">
        testTime = #{record.testtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.projectid != null">
        projectID = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update eo_project_test_execution_history
    set executionID = #{record.executionid,jdbcType=INTEGER},
      testTime = #{record.testtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      userID = #{record.userid,jdbcType=INTEGER},
      projectID = #{record.projectid,jdbcType=INTEGER},
      comments = #{record.comments,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eo_project_test_execution_history
    set executionID = #{record.executionid,jdbcType=INTEGER},
      testTime = #{record.testtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      userID = #{record.userid,jdbcType=INTEGER},
      projectID = #{record.projectid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.csc.test.platform.model.TestExecutionHistory">
    update eo_project_test_execution_history
    <set>
      <if test="testtime != null">
        testTime = #{testtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="userid != null">
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        projectID = #{projectid,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where executionID = #{executionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.csc.test.platform.model.TestExecutionHistory">
    update eo_project_test_execution_history
    set testTime = #{testtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      userID = #{userid,jdbcType=INTEGER},
      projectID = #{projectid,jdbcType=INTEGER},
      comments = #{comments,jdbcType=LONGVARCHAR}
    where executionID = #{executionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csc.test.platform.model.TestExecutionHistory">
    update eo_project_test_execution_history
    set testTime = #{testtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      userID = #{userid,jdbcType=INTEGER},
      projectID = #{projectid,jdbcType=INTEGER}
    where executionID = #{executionid,jdbcType=INTEGER}
  </update>
</mapper>